import streamlit as st
from utils.gemini_handler import call_gemini_api

def run():
    st.header("üí° Identificador de Oportunidades de Automa√ß√£o")
    st.write("Descreva um processo de neg√≥cio para que a I.A. identifique os melhores pontos para automa√ß√£o e inova√ß√£o.")
    
    process_input = st.text_area(
        "Cole a descri√ß√£o do processo, transcri√ß√£o de reuni√£o ou suas anota√ß√µes aqui:", 
        height=250, 
        placeholder="Ex: O processo de contas a pagar envolve receber a fatura por e-mail, abrir o PDF, digitar os dados na planilha X, conferir com o sistema Y e aprovar o pagamento."
    )

    if st.button("Identificar Oportunidades"):
        if process_input:
            with st.spinner("Analisando o processo..."):
                prompt = f"""
                Voc√™ √© um Consultor de Automa√ß√£o e Inova√ß√£o S√™nior. Sua principal habilidade √© analisar processos de neg√≥cio e identificar oportunidades claras para otimiza√ß√£o.
                Analise a seguinte descri√ß√£o de processo e identifique as melhores oportunidades para (1) Automa√ß√£o de Processos Rob√≥ticos (RPA) e (2) Intelig√™ncia Artificial (Machine Learning/IA).
                Para cada oportunidade encontrada, forne√ßa:
                - **Oportunidade:** Descreva a tarefa ou etapa do processo.
                - **Tecnologia Sugerida:** (RPA ou I.A.).
                - **Justificativa:** Explique brevemente por que a tarefa √© uma boa candidata para a tecnologia sugerida.
                Descri√ß√£o do Processo para An√°lise: --- {process_input} ---
                """
                response_text = call_gemini_api(prompt)
                st.divider()
                st.subheader("Oportunidades de Automa√ß√£o Encontradas")
                st.markdown(response_text)
        else:
            st.warning("Por favor, insira a descri√ß√£o de um processo.")