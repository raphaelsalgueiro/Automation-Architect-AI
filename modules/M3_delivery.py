import streamlit as st
from utils.gemini_handler import call_gemini_api

def run():
    st.header("üìÑ F√°brica de Documentos para Desenvolvimento")
    st.write("Cole o fluxo do processo 'To-Be' gerado no m√≥dulo de Design para criar os artefatos para a equipe de desenvolvimento.")
    
    pdd_input = st.text_area(
        "Cole o fluxo do processo 'To-Be' aqui:",
        height=300,
        placeholder="Ex: Passo 1: Rob√¥ monitora a pasta de rede. Passo 2: Rob√¥ abre o PDF e extrai os dados. Passo 3: Rob√¥ faz login no CRM..."
    )

    if st.button("Gerar Artefatos para Devs"):
        if pdd_input:
            with st.spinner("Escrevendo as User Stories e Requisitos..."):
                prompt = f"""
                Voc√™ √© um Analista de Requisitos S√™nior. Sua tarefa √© traduzir um documento de design de processo (PDD) em artefatos claros para uma equipe de desenvolvimento √Ågil.
                Com base no fluxo de processo 'To-Be' abaixo, gere os seguintes documentos, usando Markdown para formata√ß√£o:
                1. **√âpico Principal:**
                2. **Hist√≥rias de Usu√°rio (User Stories):**
                3. **Requisitos N√£o Funcionais (NFRs):**
                4. **Crit√©rios de Aceita√ß√£o:**
                Fluxo de Processo para An√°lise: --- {pdd_input} ---
                """
                response_text = call_gemini_api(prompt)
                st.divider()
                st.subheader("Artefatos para a Equipe de Desenvolvimento")
                st.markdown(response_text)
        else:
            st.warning("Por favor, cole o fluxo do processo 'To-Be'.")